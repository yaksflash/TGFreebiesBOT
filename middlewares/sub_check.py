from aiogram.types import Message, CallbackQuery, TelegramObject
from aiogram.enums.chat_member_status import ChatMemberStatus
from aiogram.exceptions import TelegramBadRequest
from aiogram import Bot
from typing import Callable, Awaitable, Dict, Any
from aiogram.enums import ParseMode
from config import CHANNEL_ID, CHANNEL_USERNAME

async def check_subscription(
    handler: Callable[[TelegramObject, Dict[str, Any]], Awaitable[Any]],
    event: TelegramObject,
    data: Dict[str, Any]
) -> Any:
    bot: Bot = data['bot']

    user_id = None
    if isinstance(event, Message):
        user_id = event.from_user.id
        
    elif isinstance(event, CallbackQuery):
        user_id = event.from_user.id
    try:
        if user_id is None:
            return await handler(event, data)
        if user_id != event.chat.id:
            return await handler(event, data)
    except AttributeError:
        return await handler(event, data)
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)
        if member.status in [ChatMemberStatus.LEFT, ChatMemberStatus.KICKED]:
            raise TelegramBadRequest("User not subscribed")
    except:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /start (–≤ —Ç–æ–º —á–∏—Å–ª–µ /start=xxx)
        if event.text and event.text.startswith('/start'):
            try:
                _, end = event.text.split(' ')
                text = f'''–ü—Ä–∏–≤–µ—Ç –Ω–æ–≤–∏—á–æ–∫! üëã
–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:
üëâ <a href="https://t.me/{CHANNEL_USERNAME}">–ö–∞–Ω–∞–ª</a>
                
–ê –∑–∞—Ç–µ–º —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ, –∏–Ω–∞—á–µ –Ω–∞–≥—Ä–∞–¥–∞ –Ω–µ –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–∞:
https://t.me/tg_freebies_bot?start={end}
                '''
            except ValueError:
                text = f'üëã –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞:\n\nüëâ <a href="https://t.me/{CHANNEL_USERNAME}">–ö–∞–Ω–∞–ª</a>'
            
        else:
            text = f' –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞:\n\nüëâ <a href="https://t.me/{CHANNEL_USERNAME}">–ö–∞–Ω–∞–ª</a>'
        if isinstance(event, Message):
            await event.answer(text, parse_mode=ParseMode.HTML)
        elif isinstance(event, CallbackQuery):
            await event.message.answer(text, parse_mode=ParseMode.HTML)
        return  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–∞

    return await handler(event, data)